- name: TCP Configuration
  include_role:
    name: tcp

- name: Include role k3s/prereq
  include_role:
    name: k3s/prereq

- name: Configure host service
  include_role:
    name: utils/host-service
  when:
  - join_as_host | default(false)|bool == true

- name: Include role k3s/airgap
  include_role:
    name: k3s/airgap
  vars:
    is_k3s_server: true

- name: Include role k3s/k3s_server
  include_role:
    name: k3s/k3s_server
  vars:
    is_keepalived_master: true

- name: Verify online status
  ansible.builtin.debug:
    msg: Online status is {{ online_status }} and offline_data_path is {{ offline_data_path }}

- name: loading images
  include_role:
    name: utils/load-images
  when:
  - online_status == "offline"
  - offline_data_path | length > 0

- name: Copy push-images.sh to /tmp/push-images.sh
  template:
    src: push-images.sh.j2
    dest: /tmp/push-images.sh
  when:
  - docker_insecure_registries is defined
  - docker_insecure_registries | length > 0
  - online_status == "offline"
  - offline_data_path is defined
  - offline_data_path | length > 0

- name: Make push-images.sh executable
  file:
    path: /tmp/push-images.sh
    mode: '0755'
  when:
  - docker_insecure_registries is defined
  - docker_insecure_registries | length > 0
  - online_status == "offline"
  - offline_data_path is defined
  - offline_data_path | length > 0

- name: Push images to local registry. It might take a few minutes...
  shell:
    cmd: /tmp/push-images.sh
  args:
    executable: /bin/bash
  when:
  - docker_insecure_registries is defined
  - docker_insecure_registries | length > 0
  - online_status == "offline"
  - offline_data_path is defined
  - offline_data_path | length > 0
  retries: 5
  register: push_images_result
  delay: 30
  ignore_errors: true
  become: yes
  until: push_images_result.rc == 0

- name: Copy calico.yaml to /tmp/calico.yaml
  template:
    src: calico.yaml.j2
    dest: /var/lib/rancher/k3s/server/manifests/calico.yaml

- name: Update traefik component configuration
  copy:
    src: traefik-config.yaml
    dest: /var/lib/rancher/k3s/server/manifests/traefik-config.yaml

- name: Copy traefik daemonset yaml to /var/lib/rancher/k3s/server/manifests/traefik-ds.yaml
  copy:
    src: traefik-ds.yaml
    dest: /var/lib/rancher/k3s/server/manifests/traefik-ds.yaml
